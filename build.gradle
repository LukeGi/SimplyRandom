buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'idea'
apply plugin: 'maven-publish'

version = VERSION
group = "${AUTHOR}.${MODID}"
archivesBaseName = MODID

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: MCP_CHANNEL, version: MCP_MAPPINGS

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP' //
            property 'forge.logging.console.level', 'info'
            property 'forge.logging.noansi', 'false'
            ideaModule "${project.name}.main"

            mods {
                simplyrandom {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP' //
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.noansi', 'false'

            ideaModule "${project.name}.main"

            mods {
                simplyrandom {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'SCAN' //,REGISTRIES,REGISTRYDUMP
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.noansi', 'false'

            ideaModule "${project.name}.main"

            args '--mod', 'simplyrandom', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                simplyrandom {
                    source sourceSets.main
                }
            }
        }
    }
}

//repositories {
//    maven { url 'https://squiddev.cc/maven/' }
//}

dependencies {
    minecraft "net.minecraftforge:forge:${MC_VERSION}-${FORGE_VERSION}"

//    implementation("org.squiddev:cc-tweaked-${MC_VERSION}:${CCT_VERSION}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": MODID,
            "Specification-Vendor": AUTHOR,
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": VERSION,
            "Implementation-Vendor": AUTHOR,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allJava
}

task deobfJar(type: Jar) {
    classifier = "deobf"
    from sourceSets.main.output
}

artifacts {
    archives deobfJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact deobfJar
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}