buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.0.5-beta'
group = 'lhg.forgemod.simplyrandom' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'simplyrandom'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: "${MAPPINGS_CHANNEL}", version: "${MAPPINGS_VERSION}-${MC_VERSION}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

//    accessTransformer = file('src/main/resources/META-INF/simplyrandom_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            mods {
                simplyrandom {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            mods {
                simplyrandom {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            environment 'target', 'fmldevdata'

            ideaModule "${project.name}.main"

            source sourceSets.main
            args '--mod', 'simplyrandom', '--all', '--output', rootProject.file('src/generated/resources/')
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${MC_VERSION}-${FORGE_VERSION}"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "simplyrandom",
                "Specification-Vendor"    : "luhegi",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "luhegi",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "FMLAT"                   : 'simplyrandom_at.cfg'
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
